<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bulmeong.basecamp.secondHandProduct.mapper.ProductSqlMapper">
    <!--상품 등록 -->
    <insert id="insertSecondhandProduct">
        <selectKey resultType="int" keyProperty="product_id" order="AFTER">
            SELECT max(product_id) from bc_secondhand_product;
        </selectKey>
        INSERT INTO bc_secondhand_product
        (user_id, category_id, polygon_id, main_image, title, price, explanation, status, read_count, chat_room_count)
        values
        (#{user_id}, #{category_id}, #{polygon_id}, #{main_image}, #{title}, #{price}, #{explanation}, #{status} , #{read_count}, 0)
    </insert>
    <!-- 상품 수정 -->
    <update id="updateSecondhandProduct">
        UPDATE bc_secondhand_product
        SET
            main_image = #{main_image},
            title = #{title},
            price = #{price},
            explanation = #{explanation},
            category_id = #{category_id},
            polygon_id = #{polygon_id},
            updated_at = NOW()
        WHERE product_id = #{product_id}
    </update>
    <!--메인페이지 전체 게시글  리스트 + 전체지역 -->
    <select id="selectSecondhandProductList"
            resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        GROUP BY p.product_id
        ORDER BY p.product_id DESC
    </select>
    <!-- 메인페이지 전체 게시글 리스트 + 선택지역 -->
    <select id="selectSecondhandProductIsAreaList"
            resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE poly.polygon_name = #{polygon_name}
        GROUP BY p.product_id
        ORDER BY p.product_id DESC
    </select>

    <!-- 제품 거래상태 업데이트 -->
    <update id="updateProductStatus">
        UPDATE bc_secondhand_product
        SET
            status = #{status}
        WHERE product_id = #{product_id}
    </update>

    <!--카테고리별 게시글 리스트-->
    <select id="selectSecondhandProductByCategoryList"
            resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE c.category_id = #{category_id}
        GROUP BY p.product_id, c.category_name
        ORDER BY p.product_id DESC
    </select>
    <!-- 관심상품별 게시글 리스트 -->
    <select id="selectSecondhandProductByWishList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE w.user_id = #{user_id}
        GROUP BY p.product_id, c.category_name
        ORDER BY p.product_id DESC
    </select>
    <!-- 카테고리별 게시글 리스트 상단 이름 -->
    <select id="selectCategoryName" resultType="String">
        SELECT category_name
        FROM bc_secondhand_product_category
        WHERE category_id = #{category_id};
    </select>
    <!--상품 이미지 등록-->
    <insert id="insertSecondhandProductImg">
        INSERT INTO bc_secondhand_product_image
            (product_id, image_url)
        values (#{product_id}, #{image_url})
    </insert>
    <!-- 상품 이미지 수정 -->
    <delete id="deleteImageByUrl">
        DELETE FROM bc_secondhand_product_image
        WHERE image_url = #{image_url}
    </delete>
    <!-- 상품 디테일 이미지 리스트 -->
    <select id="selectSecondhandProductImgList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.ImageDto">
        SELECT *
        FROM bc_secondhand_product_image
        WHERE product_id = #{product_id};
    </select>
    <!--상품 디테일 정보-->
    <select id="selectSecondhandDetailProduct"
            resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT p.*, c.category_name, poly.*
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE product_id = #{product_id}
    </select>
    <!-- 상품 디테일 조회수 -->
    <update id="updateSecondhandDetailProductCount">
        UPDATE bc_secondhand_product
        SET read_count = read_count + 1
        WHERE product_id = #{product_id}
    </update>
    <!--카테고리 리스트-->
    <select id="selectCategoryList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.CategoryDto">
        SELECT *
        FROM bc_secondhand_product_category
        ORDER BY category_id ASC
    </select>
    <!--관심상품 좋아요 -->
    <insert id="insertProductLike">
        INSERT INTO bc_secondhand_product_wish_list
            (user_id, product_id, wish_list_count)
        values
            (#{user_id}, #{product_id}, #{wish_list_count})
    </insert>
    <!--관심상품 좋아요 취소 -->
    <delete id="deleteProductByUserLike">
        DELETE FROM bc_secondhand_product_wish_list
        WHERE user_id = #{user_id}
          AND product_id = #{product_id}
    </delete>
    <!--0번게시글 관심등록 총합-->
    <select id="selectProductTotalLikeCount" resultType="int">
        SELECT COUNT(*) AS wish_list_count
        FROM bc_secondhand_product_wish_list
        WHERE product_id = #{product_id}
    </select>
    <!--0번게시글 0번 회원 관심등록 확인-->
    <select id="selectProductByUserLike" resultType="int">
        SELECT COUNT(*) AS wish_list_count
        FROM bc_secondhand_product_wish_list
        WHERE user_id = #{user_id}
          AND product_id = #{product_id}
    </select>
    <!--게시글 삭제-->
    <delete id="deletePost">
        DELETE FROM bc_secondhand_product
        WHERE product_id = #{product_id}
    </delete>

    <!--채팅방 상풍정보-->
    <select id="selectChatRoomProductInformation" resultType="com.bulmeong.basecamp.secondHandProduct.dto.SecondhandProductDto">
        SELECT * FROM bc_secondhand_product WHERE product_id = #{product_id}
    </select>

    <!-- 마이페이지 -->
<!-- 판매내역 - 판매중   -->
    <select id="selectSalesProduct"  resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE p.user_id = #{user_id} AND p.status = "판매중"
        GROUP BY p.product_id
        ORDER BY p.product_id DESC
    </select>
<!-- 판매중 게시글 수 -->
    <select id="getTotalSales" resultType="int">
        SELECT
            COUNT(*)
        FROM bc_secondhand_product
        WHERE user_id = #{user_id} AND status = '판매중';
    </select>
<!-- 판매내역 - 거래완료   -->
    <select id="selectTransactionCompleteProduct"  resultType="com.bulmeong.basecamp.secondHandProduct.dto.AllContentsProductDto">
        SELECT
            p.*,
            c.category_name,
            COUNT(w.product_id) AS wish_list_count,
            poly.polygon_name
        FROM bc_secondhand_product p
                 JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
                 LEFT JOIN bc_secondhand_product_wish_list w ON p.product_id = w.product_id
                 LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        WHERE p.user_id = #{user_id} AND p.status = "거래완료"
        GROUP BY p.product_id
        ORDER BY p.product_id DESC
    </select>
<!-- 거래완료 게시글 수 -->
    <select id="getTotalTransactionComplete" resultType="int">
        SELECT
            COUNT(*)
        FROM bc_secondhand_product
        WHERE user_id = #{user_id} AND status = '거래완료';
    </select>
<!-- 거래완료 -> 구매자중 선택 목록 (채팅한 사람이 있다면) -->
    <select id="getProductBuyerList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.ProductBuyerDto">
        SELECT
            c.buyer_user_id,
            c.seller_user_id,
            u.nickname,
            p.title, p.product_id, p.main_image,
            c.message_time,
            u.profile_image
        FROM bc_secondhand_product_chat_room c
        JOIN bc_user u ON u.id = c.buyer_user_id
        JOIN bc_secondhand_product p ON p.product_id = c.product_id
        WHERE c.seller_user_id = #{seller_user_id}
          AND c.product_id = #{product_id}
    </select>
    <!-- 후기보내기 -> 좋아요 선택지 -->
    <select id="selectLikeReviewList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.LikeReviewDto">
        SELECT * FROM bc_secondhand_like_review ORDER BY like_review_id ASC
    </select>
    <!-- 후기보내기 -> 싫어요 선택지 -->
    <select id="selectUnlikeReviewList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.UnlikeReviewDto">
        SELECT * FROM bc_secondhand_unlike_review ORDER BY unlike_review_id ASC
    </select>

    <!-- 좋아요 거래후기 저장 -->
    <insert id="insertLikeReview">
        INSERT INTO bc_secondhand_product_like_transaction_review
            (product_id, buyer_user_id, seller_user_id, like_review_id)
        values
            (#{product_id}, #{buyer_user_id}, #{seller_user_id}, #{like_review_id})
    </insert>
    <!-- 좋아요 선택지 횟수 업데이트 -->
    <update id="selectedLikeReviewCount">
        UPDATE bc_secondhand_like_review
        SET
            like_count = like_count + 1
        WHERE like_review_id = #{like_review_id}
    </update>
    <!-- 좋아요 유저 거래후기 리스트 -->
    <select id="myLikeReviewList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.LikeTransactionReviewListDto">
        SELECT tr.*, lr.like_review_content , lr.like_count
        FROM bc_secondhand_product_like_transaction_review tr
        JOIN bc_secondhand_like_review lr ON lr.like_review_id = tr.like_review_id
        WHERE tr.buyer_user_id = #{buyer_user_id}
        GROUP BY lr.like_review_id
        ORDER BY lr.like_review_id
    </select>

    <!-- 싫어요 거래후기 저장 -->
    <insert id="insertUnlikeReview">
        INSERT INTO bc_secondhand_product_unlike_transaction_review
            (product_id, buyer_user_id, seller_user_id, unlike_review_id)
        values
            (#{product_id}, #{buyer_user_id}, #{seller_user_id}, #{unlike_review_id})
    </insert>
    <!-- 싫어요 선택지 횟수 업데이트 -->
    <update id="selectedUnlikeReviewCount">
        UPDATE bc_secondhand_unlike_review
        SET
            unlike_count = unlike_count + 1
        WHERE unlike_review_id = #{unlike_review_id}
    </update>
    <!-- 싫어요 유저 거래후기 리스트 -->
    <select id="myUnlikeReviewList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.UnLikeTransactionReviewListDto">
        SELECT tr.*, ur.unlike_review_content , ur.unlike_count
        FROM bc_secondhand_product_unlike_transaction_review tr
        JOIN bc_secondhand_unlike_review ur ON ur.unlike_review_id = tr.unlike_review_id
        WHERE tr.buyer_user_id = #{buyer_user_id}
        GROUP BY ur.unlike_review_id
        ORDER BY ur.unlike_review_id
    </select>
    <!-- 유저 닉네임 받아서 id 가져오기 -->
    <select id="getBuyerUserId" resultType="int">
        SELECT id FROM bc_user WHERE nickname = #{nickname}
    </select>
    <!-- user_id에 등록된 위치 받아오    기 -->
    <select id="getSessionUserArea" resultType="String">
        SELECT selected_area_name FROM bc_secondhand_location WHERE user_id = #{user_id}
    </select>
    <!-- 판매자 -> 구매자 거래후기 확인하기 -->
    <select id="checkSellerReviews" resultType="int">
        SELECT
            (SELECT COUNT(*)
             FROM bc_secondhand_product_like_transaction_review
             WHERE seller_user_id = #{seller_user_id}
               AND product_id = #{product_id})
                +
            (SELECT COUNT(*)
             FROM bc_secondhand_product_unlike_transaction_review
             WHERE seller_user_id = #{seller_user_id}
               AND product_id = #{product_id})
                AS total_reviews
    </select>
    <!-- 구매자 확인 -->
    <insert id="insertBuyerConfirmation">
        INSERT INTO bc_secondhand_buyer_confirmation
            (product_id, buyer_user_id, seller_user_id, review_confirmation)
        values
            (#{product_id}, #{buyer_user_id}, #{seller_user_id}, 1)
    </insert>

    <!-- 구매자 구매 상품 -->
    <select id="selectBuyerConfirmationProductList" resultType="com.bulmeong.basecamp.secondHandProduct.dto.BuyerConfirmationProductDto">
        SELECT
            p.*,
            c.category_name,
            COALESCE(COUNT(w.product_id), 0) AS wish_list_count,
            poly.polygon_name,
            bc.buyer_user_id
        FROM bc_secondhand_buyer_confirmation bc
        JOIN bc_secondhand_product p ON bc.product_id = p.product_id
        JOIN bc_secondhand_product_category c ON c.category_id = p.category_id
        LEFT JOIN bc_secondhand_polygon poly ON poly.polygon_id = p.polygon_id
        LEFT JOIN bc_secondhand_product_wish_list w ON w.product_id = p.product_id
        WHERE bc.buyer_user_id = #{buyer_user_id}
        GROUP BY p.product_id
    </select>



</mapper>
