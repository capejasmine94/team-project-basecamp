<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bulmeong.basecamp.campingcar.mapper.CampingcarSqlMapper">
 
    <!-- 좋아요 관련 -->
    <insert id="createLike">
        insert into bc_campingcar_like (
            product_id,rent_user_id
        )values(
            #{product_id}, #{rent_user_id}
        )
    </insert>

    <!-- 등록된 차량 좋아요 누른 수 -->
    <select id="countLikeByProduct_id" resultType="int">
        select count(*) from bc_campingcar_like 
        where product_id = #{product_id}
    </select>

    <!-- 회원이 등록된 차량에 좋아요를 눌른 수, count를 통해 회원이 좋아요 눌렀는지 확인하는 쿼리 -->
    <select id="checkUserLike" resultType="int">
        select count(*) from bc_campingcar_like 
        where  product_id = #{product_id} and rent_user_id = #{rent_user_id}
    </select>

    <!-- 좋아요 1번 이상 눌렀을 경우 취소 쿼리 -->
    <delete id="deleteLikeByLikeDto">
        delete from bc_campingcar_like 
        where product_id = #{product_id} and rent_user_id = #{rent_user_id}
    </delete>

    <!-- 상세페이지_캠핑카 기본 정보 조회-->
    <select id="findCampingCarById" resultType="Map">
        select         
            bc.id, 
            bc.rental_company_id,
            brci.comp_name, 
            brci.comp_profile_image,
            brci.representative_name, 
            brci.comp_email,
            bctc.name AS car_type_name, 
            bc.product_name, 
            bc.main_img, 
            bc.short_description,
            bc.detailed_description,
            bc.avaid_time,
            bc.return_dateTime,
            bc.rental_fee_weekdays, 
            bc.rental_fee_weekend,
            bc.garage_address, 
            bc.overnight_stay,
            bc.seating_capacity, 
            bc.sleeping_capacity, 
            bdlc.name AS driver_license_name,  
            bdac.name AS driver_age_condition_name, 
            bdec.name AS driver_experience_condition_name,
            bc.cancellation_policy,
            bc.pet_friendly, 
            bc.is_opened
            from bc_campingcar bc 
            INNER join bc_rental_company_info brci on bc.rental_company_id = brci.id
            INNER join bc_location_category blc on brci.location_category_id = blc.id
            inner join bc_car_type_categories bctc on bc.category_id = bctc.id
            INNER join bc_driver_license_condition bdlc on bc.driver_license_id = bdlc.id
            INNER join bc_driver_age_condition bdac on bc.driver_age_id = bdac.id
            INNER join bc_driver_experience_condition bdec on bc.driver_experience_id = bdec.id
            left join bc_campingcar_like cl on cl.product_id = bc.id 
            where bc.id = #{id}
    </select>
    <!-- 상세페이지_세부이미지 -->
    <select id="findDetail_ImgByCarId" resultType="com.bulmeong.basecamp.campingcar.dto.ProductDetailImgDto">
        select * from bc_product_detail_img bpdi 
        where product_id=#{id}
    </select>

    <!-- 상세페이지_기본보유옵션 -->
    <select id="findBasicfacilitiesByCarId" resultType="Map">
        select 
            DISTINCT bc.id, 
            bcbf.name 
        from bc_campingcar bc 
        inner join bc_product_x_basic_facilities bpxbf on bc.id = bpxbf.product_id
        inner join bc_car_basic_facilities bcbf on bpxbf.basic_facilities_id  = bcbf.id 
        where bc.id = #{id}    
    </select>

    <!-- 상세페이지_리뷰 카운트 -->
    <select id="countByProductId" resultType="int">
        select count(*) from bc_campingcar_like
        where product_id=#{id}
    </select>
    <!-- rentuser 등록-->
    <insert id="createRentUser">
        insert into bc_rent_user name(
            user_id, driver_license_number, driver_license_id, driver_age_id, driving_experience_id, driver_license_image
        )values(
            #{user_id}, #{driver_license_number}, #{driver_license_id}, #{driver_age_id}, #{drivier_experience_id}, #{driver_license_image}
        )
    </insert>
</mapper>