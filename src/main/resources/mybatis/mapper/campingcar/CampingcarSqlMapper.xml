<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bulmeong.basecamp.campingcar.mapper.CampingcarSqlMapper">
 
    <!-- 좋아요 관련 -->
    <insert id="createLike">
        insert into bc_campingcar_like (
            product_id,rent_user_id
        )values(
            #{product_id}, #{rent_user_id}
        )
    </insert>

    <!-- 등록된 차량 좋아요 누른 수 -->
    <select id="countLikeByProduct_id" resultType="int">
        select count(*) from bc_campingcar_like 
        where product_id = #{product_id}
    </select>

    <!-- 회원이 등록된 차량에 좋아요를 눌른 수, count를 통해 회원이 좋아요 눌렀는지 확인하는 쿼리 -->
    <select id="checkUserLike" resultType="int">
        select count(*) from bc_campingcar_like 
        where  product_id = #{product_id} and rent_user_id = #{rent_user_id}
    </select>

    <!-- 좋아요 1번 이상 눌렀을 경우 취소 쿼리 -->
    <delete id="deleteLikeByLikeDto">
        delete from bc_campingcar_like 
        where product_id = #{product_id} and rent_user_id = #{rent_user_id}
    </delete>

    <!-- 상세페이지_캠핑카 기본 정보 조회-->
    <select id="findCampingCarById" resultType="Map">
        select         
                    bc.id, 
                    bc.rental_company_id,
                    brci.comp_name, 
                    brci.comp_profile_image,
                    brci.representative_name, 
                    brci.comp_email,
                    bctc.name AS car_type_name, 
                    bc.product_name, 
                    bc.main_img, 
                    bc.short_description,
                    bc.detailed_description,
                    bc.avaid_time,
                    bc.return_dateTime,
                    bc.rental_fee_weekdays, 
                    bc.rental_fee_weekend,
                    bc.garage_address, 
                    bc.overnight_stay,
                    bc.seating_capacity, 
                    bc.sleeping_capacity, 
                    bdlc.name AS driver_license_name,  
                    bdac.name AS driver_age_condition_name, 
                    bdec.name AS driver_experience_condition_name,
                    bc.cancellation_policy,
                    bc.pet_friendly, 
                    bc.is_opened
        from bc_campingcar bc 
        INNER join 
                    bc_rental_company_info brci on bc.rental_company_id = brci.id
        INNER join 
                    bc_location_category blc on brci.location_category_id = blc.id
        inner join 
                    bc_car_type_categories bctc on bc.category_id = bctc.id
        INNER join 
                    bc_driver_license_condition bdlc on bc.driver_license_id = bdlc.id
        INNER join 
                    bc_driver_age_condition bdac on bc.driver_age_id = bdac.id
        INNER join 
                    bc_driver_experience_condition bdec on bc.driver_experience_id = bdec.id
        where bc.id = #{id}
    </select>
    <!-- 상세페이지_세부이미지 -->
    <select id="findDetail_ImgByCarId" resultType="com.bulmeong.basecamp.campingcar.dto.ProductDetailImgDto">
        select * from bc_product_detail_img bpdi 
        where product_id=#{id}
    </select>

    <!-- 상세페이지_기본보유옵션 -->
    <select id="findBasicfacilitiesByCarId" resultType="Map">
        select 
                    DISTINCT bc.id, 
                    bcbf.name 
        from bc_campingcar bc 
        inner join 
                    bc_product_x_basic_facilities bpxbf on bc.id = bpxbf.product_id
        inner join 
                    bc_car_basic_facilities bcbf on bpxbf.basic_facilities_id  = bcbf.id 
        where bc.id = #{id}    
    </select>

    <!-- 상세페이지_리뷰 카운트 -->
    <select id="countByProductId" resultType="int">
        select count(*) from bc_campingcar_like
        where product_id=#{id}
    </select>
    
    <!-- rentuser 존재 여부 검증 -->
    <select id="findRentUserByUserId" resultType="int">
        select count(*) from bc_rent_user bru
        where user_id =#{id}
    </select>

    <!-- 예약하기의 기존 rentuserId를 가지고 오는 쿼리 -->
    <select id="existingByRentUserId" resultType="int">
        select id from bc_rent_user bru
        where user_id =#{id}
    </select>
    <!-- rentuser 등록-->
    <insert id="createRentUser">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select max(id) from bc_rent_user
        </selectKey>
        insert into bc_rent_user(
            user_id, 
            driver_license_number, 
            driver_license_id, 
            driver_age_id, 
            driver_experience_id, 
            driver_license_image
        )values(
            #{user_id}, 
            #{driver_license_number}, 
            #{driver_license_id}, 
            #{driver_age_id}, 
            #{driver_experience_id}, 
            #{driver_license_image}
        )
    </insert>
    <!-- 예약하기 -->
    <insert id="createReservation">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select max(id) from bc_reservation
        </selectKey>
        insert into bc_reservation(
            rent_user_id, 
            product_id, 
            start_date, end_date, 
            progress, 
            cancellation_date
        )values(
            #{rent_user_id}, 
            #{product_id}, 
            #{start_date}, 
            #{end_date}, 
            '예약접수', 
            #{cancellation_date}
        )
    </insert>

    <!-- 대여시 차량 점검 -->
    <insert id="createRentShoot">
        insert into bc_rental_external_inspection(
            reservation_id, 
            front_view, 
            passenger_front_view, 
            passenger_rear_view, 
            rear_view, 
            driver_rear_view,
            driver_front_view
        )values(
            #{reservation_id},
            #{front_view},
            #{passenger_front_view},
            #{passenger_rear_view},
            #{rear_view},
            #{driver_rear_view},
            #{driver_front_view}
        )
    </insert>
    <!-- 반납시 차량 점검  -->
    <insert id="createReturnShoot">
        insert into bc_return_external_inspection(
            reservation_id, 
            front_view, 
            passenger_front_view, 
            passenger_rear_view, 
            rear_view, 
            driver_rear_view,
            driver_front_view
        )values(
            #{reservation_id},
            #{front_view},
            #{passenger_front_view},
            #{passenger_rear_view},
            #{rear_view},
            #{driver_rear_view}
            #{driver_front_view}
        )
    </insert>
    <!-- 최종 예약 정보 확인  --> 
    <select id="findReservationByRentUserIdAndReservationId" resultType="Map">
        select 
                    br.id,
                    br.start_date AS reservationStart_date,
                    br.end_date AS reservationEnd_date,
                    br.progress AS reservationProgress,
                    br.created_at AS reservationCreated_at,
                    bu.nickname As rentUserNickname,
                    brci.comp_name,
                    bctc.name AS carTypeName,
                    bc.product_name,
                    bc.rental_fee_weekdays,
                    bc.rental_fee_weekend,
                    bc.garage_address, 
                    bc.seating_capacity,
                    bc.sleeping_capacity,
                    bdlc.name AS driver_license_name,  
                    bdac.name AS driver_age_condition_name, 
                    bdec.name AS driver_experience_condition_name
        from bc_reservation br 
        INNER JOIN 
                    bc_rent_user bru on br.rent_user_id = bru.id
        INNER JOIN 
                    bc_user bu  on bru.user_id = bu.id
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id
        INNER JOIN 
                    bc_rental_company_info brci on bc.rental_company_id = brci.id
        INNER JOIN 
                    bc_car_type_categories bctc on bc.category_id = bctc.id
        INNER JOIN 
                    bc_driver_license_condition bdlc on bc.driver_license_id = bdlc.id
        INNER JOIN 
                    bc_driver_age_condition bdac on bc.driver_age_id = bdac.id
        INNER JOIN 
                    bc_driver_experience_condition bdec on bc.driver_experience_id = bdec.id
        where br.rent_user_id =#{rent_user_id} and br.id = #{id}
    </select>
<!-- 차량고객 이용내역 -->
    <select id="useageHistroyAllByRentUserId" resultType="Map">
        select 	
                    br.id,
                    br.product_id,
                    br.progress,
                    bctc.name AS carTypeName,
                    bc.product_name,
                    br.start_date AS reservationStart_date,
                    br.end_date AS reservationEnd_date,
                    bc.garage_address,
                    br.created_at AS reservationCreated_at
        from bc_reservation br
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id
        INNER JOIN 
                    bc_car_type_categories bctc on bc.category_id = bctc.id
        INNER JOIN 
                    bc_rent_user bru on br.rent_user_id = bru.id 
        INNER JOIN 
                    bc_user bu on bru.user_id = bu.id
        where br.rent_user_id = #{id}
        order by br.id DESC
    </select>

    <!-- 리뷰insert -->
    <insert id="createCarReview">
        insert into bc_rental_review(
            reservation_id, 
            rate, content, 
            reply_content
        )values(
            #{reservation_id}, 
            #{rate}, #{content}, 
            #{reply_content}
        )
    </insert>
    <!-- 해당 차량의 리뷰 리스트 -->
    <select id="reviewAllbyCarId" resultType="Map">
        select 
                    brr.id AS reviewId,
                    br.id AS reservation_Id,
                    bu.profile_image,
                    bu.nickname,
                    brr.rate,
                    brr.content,
                    brr.created_at,
                    brr.reply_content,
                    brr.reply_date
        from bc_rental_review brr
        INNER JOIN 
                    bc_reservation br on brr.reservation_id = br.id 
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id 
        INNER JOIN 
                    bc_rent_user bru on br.rent_user_id = bru.id 
        INNER JOIN 
                    bc_user bu on bru.user_id = bu.id 
        where bc.id = #{id}
    </select>
    <!-- 해당 차량의 리뷰 별점 평균 -->
    <select id="avgByCarId" resultType="Double">
        select ROUND(avg(rate),2)
        from bc_rental_review brr
        INNER JOIN 
                    bc_reservation br on brr.reservation_id = br.id 
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id 
        where bc.id = #{id}
    </select>
    <!-- 해당 차량의 리뷰 참여 인원 수 -->
    <select id="reviewByCountPerson" resultType="int">
        select count(*)
        from bc_rental_review brr
        INNER JOIN 
                    bc_reservation br on brr.reservation_id = br.id 
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id 
        where bc.id = #{id}
    </select>
    <!-- 해당 차량의 각 별점 마다 인원수  -->
    <select id="ratingGroupBycar" resultType="Map">
        select rate, count(*) as count 
        from bc_rental_review brr
        INNER JOIN 
                    bc_reservation br on brr.reservation_id = br.id 
        INNER JOIN 
                    bc_campingcar bc on br.product_id = bc.id 
        where bc.id = #{id}
        group BY  brr.rate
        order by brr.rate DESC
    </select>

    <select id="getMyLikeList" resultType="Map">
        select
            bc.id, 
            bc.rental_company_id,
            brci.comp_name, 
            bctc.name AS car_type_name, 
            bc.product_name, 
            bc.main_img, 
            bc.short_description,
            bc.rental_fee_weekdays, 
            bc.rental_fee_weekend,
            bc.garage_address, 
            bc.overnight_stay,
            bc.seating_capacity, 
            bc.sleeping_capacity, 
            bdlc.name AS driver_license_condition_name, 
            bdac.name AS driver_age_condition_name, 
            bdec.name AS driver_experience_condition_name,
            bc.pet_friendly, 
            bc.is_opened
        from bc_campingcar bc
        inner join bc_rental_company_info brci on bc.rental_company_id = brci.id 
        inner join bc_location_category blc on brci.location_category_id = blc.id
        inner join bc_car_type_categories bctc on bc.category_id = bctc.id
        inner join bc_driver_license_condition bdlc on bc.driver_license_id = bdlc.id 
        inner join bc_driver_age_condition bdac  on bc.driver_age_id = bdac.id
        inner join bc_driver_experience_condition bdec on bc.driver_experience_id = bdec.id
        left join bc_campingcar_like cl on cl.product_id = bc.id 
        left join bc_rental_peak_price brpp on bc.id = brpp.product_id
        WHERE cl.rent_user_id = #{rentUserPk}
        order by bc.id DESC
    </select>

    <select id="getSearchResultList" resultType="Map">
        SELECT
            bc.id,
            bc.rental_company_id,
            brci.comp_name,
            bctc.name AS car_type_name,
            bc.product_name,
            bc.main_img,
            bc.short_description,
            bc.rental_fee_weekdays,
            bc.rental_fee_weekend,
            bc.garage_address,
            bc.overnight_stay,
            bc.seating_capacity,
            bc.sleeping_capacity,
            bdlc.name AS driver_license_condition_name,
            bdac.name AS driver_age_condition_name,
            bdec.name AS driver_experience_condition_name,
            bc.pet_friendly,
            bc.is_opened
        FROM
            bc_campingcar bc
        INNER JOIN
            bc_rental_company_info brci ON bc.rental_company_id = brci.id
        INNER JOIN
            bc_location_category blc ON brci.location_category_id = blc.id
        INNER JOIN
            bc_car_type_categories bctc ON bc.category_id = bctc.id
        INNER JOIN
            bc_driver_license_condition bdlc ON bc.driver_license_id = bdlc.id
        INNER JOIN
            bc_driver_age_condition bdac ON bc.driver_age_id = bdac.id
        INNER JOIN
            bc_driver_experience_condition bdec ON bc.driver_experience_id = bdec.id
        WHERE
            blc.name = #{location}
            <if test="carTypes != null and carTypes.size() > 0">
                AND bctc.name IN 
                <foreach item="carType" index="index" collection="carTypes" open="(" separator="," close=")">
                    #{carType}
                </foreach>
            </if>
            AND bc.id NOT IN (
                SELECT DISTINCT product_id FROM bc_reservation
                WHERE cancellation_date IS NULL
                AND DATE_FORMAT(start_date, '%Y-%m-%d') &lt;= DATE_FORMAT(#{rentDate}, '%Y-%m-%d')
                AND DATE_FORMAT(end_date, '%Y-%m-%d') &gt;= DATE_FORMAT(#{returnDate}, '%Y-%m-%d')
            )
        ORDER BY
            bc.id DESC
    </select>

    <!-- 특정 차량의 무한대의 예약을 막는 쿼리  -->
    <select id="ReservationById" resultType="Map">
       select br.start_date, br.end_date  from bc_reservation br
        where product_id = #{product_id}
    </select>

</mapper>